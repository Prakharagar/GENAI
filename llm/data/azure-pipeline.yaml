# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- azure-pipeline-v3

variables:
  - name: dockerRegistryServiceConnection
    value: 3334-af22b7-4a18-9ece-222
  - name: imageRepository
    value: dataquality_matcher 
  - name: containerRegistry
    value: dataengineclientintegrations.azurecr.io
  - name: dockerfilePath
    value: $(Build.SourcesDirectory)/Dockerfile
  - name: tag
    value: $(Build.BuildId)
  - name: latestTag
    value: latest
  - name: vmImageName
    value: ubuntu-latest
  - group: docker-build-credential 

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build image with args for repository authentication
      env:
        DOCKER_BUILDKIT: 1
      inputs:
        command: build
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        arguments: --build-arg BUILD_USER=$(DOCKER_BUILD_USER) --build-arg BUILD_PAT=$(DOCKER_BUILD_PAT)
        tags: |
          $(tag)
          $(latestTag)

    - task: Docker@2
      displayName: Push image to production container registry
      env:
        DOCKER_BUILDKIT: 1
      inputs:
        command: push
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          $(latestTag)